{
  "DELTA_ACTIVE_SPARK_SESSION_NOT_FOUND" : {
    "message" : [ "Could not find active SparkSession" ],
    "sqlState" : "42000"
  },
  "DELTA_ACTIVE_TRANSACTION_ALREADY_SET" : {
    "message" : [ "Cannot set a new txn as active when one is already active" ],
    "sqlState" : "42000"
  },
  "DELTA_ADD_COLUMN_AT_INDEX_LESS_THAN_ZERO" : {
    "message" : [ "Index <columnIndex> to add column <columnName> is lower than 0" ],
    "sqlState" : "2F000"
  },
  "DELTA_ADD_COLUMN_STRUCT_NOT_FOUND" : {
    "message" : [ "Struct not found at position <position>" ],
    "sqlState" : "2F000"
  },
  "DELTA_AGGREGATION_NOT_SUPPORTED" : {
    "message" : [ "Aggregate functions are not supported in the <operation> <predicate>." ],
    "sqlState" : "0A000"
  },
  "DELTA_ALTER_TABLE_CHANGE_COL_NOT_SUPPORTED" : {
    "message" : [ "ALTER TABLE CHANGE COLUMN is not supported for changing column <currentType> to <newType>" ],
    "sqlState" : "0A000"
  },
  "DELTA_AMBIGUOUS_PATHS_IN_CREATE_TABLE" : {
    "message" : [ "CREATE TABLE contains two different locations: <identifier> and <location>.", "You can remove the LOCATION clause from the CREATE TABLE statement, or set", "<config> to true to skip this check.", "" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_CHANGE_DATA_TYPE" : {
    "message" : [ "Cannot change data type: <dataType>" ],
    "sqlState" : "22000"
  },
  "DELTA_CANNOT_CHANGE_LOCATION" : {
    "message" : [ "Cannot change the 'location' of the Delta table using SET TBLPROPERTIES. Please use ALTER TABLE SET LOCATION instead." ],
    "sqlState" : "2F000"
  },
  "DELTA_CANNOT_CHANGE_PROVIDER" : {
    "message" : [ "'provider' is a reserved table property, and cannot be altered." ],
    "sqlState" : "2F000"
  },
  "DELTA_CANNOT_CREATE_LOG_PATH" : {
    "message" : [ "Cannot create <path>" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_DESCRIBE_VIEW_HISTORY" : {
    "message" : [ "Cannot describe the history of a view." ],
    "sqlState" : "0A000"
  },
  "DELTA_CANNOT_DROP_BLOOM_FILTER_ON_NON_INDEXED_COLUMN" : {
    "message" : [ "Cannot drop bloom filter index on a non indexed column: <columnName>" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_EVALUATE_EXPRESSION" : {
    "message" : [ "Cannot evaluate expression: <expression>" ],
    "sqlState" : "0A000"
  },
  "DELTA_CANNOT_FIND_VERSION" : {
    "message" : [ "Cannot find 'sourceVersion' in <json>" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_GENERATE_CODE_FOR_EXPRESSION" : {
    "message" : [ "Cannot generate code for expression: <expression>" ],
    "sqlState" : "0A000"
  },
  "DELTA_CANNOT_GENERATE_UPDATE_EXPRESSIONS" : {
    "message" : [ "Calling without generated columns should always return a update expression for each column" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_RENAME_PATH" : {
    "message" : [ "Cannot rename <currentPath> to <newPath>" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_REPLACE_MISSING_TABLE" : {
    "message" : [ "Table <tableName> cannot be replaced as it does not exist. Use CREATE OR REPLACE TABLE to create the table." ],
    "sqlState" : "22000"
  },
  "DELTA_CANNOT_RESOLVE_COLUMN" : {
    "message" : [ "Can't resolve column <columnName> in <schema>" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_RESOLVE_SOURCE_COLUMN" : {
    "message" : [ "Couldn't resolve qualified source column <columnName> within the source query." ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_RESTORE_TABLE_VERSION" : {
    "message" : [ "Cannot restore table to version <version>. Available versions: [<startVersion>, <endVersion>]." ],
    "sqlState" : "22000"
  },
  "DELTA_CANNOT_RESTORE_TIMESTAMP_GREATER" : {
    "message" : [ "Cannot restore table to timestamp (<requestedTimestamp>) as it is after the latest version available. Please use a timestamp before (<latestTimestamp>)" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_UPDATE_ARRAY_FIELD" : {
    "message" : [ "Cannot update %1$s field %2$s type: update the element by updating %2$s.element" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_UPDATE_MAP_FIELD" : {
    "message" : [ "Cannot update %1$s field %2$s type: update a map by updating %2$s.key or %2$s.value" ],
    "sqlState" : "42000"
  },
  "DELTA_CANNOT_UPDATE_STRUCT_FIELD" : {
    "message" : [ "Cannot update <tableName> field <fieldName> type: update struct by adding, deleting, or updating its fields" ],
    "sqlState" : "42000"
  },
  "DELTA_COLUMN_NOT_FOUND" : {
    "message" : [ "Unable to find the column `<columnName>` given [<columnList>]" ],
    "sqlState" : "26000"
  },
  "DELTA_COLUMN_NOT_FOUND_IN_SCHEMA" : {
    "message" : [ "Couldn't find column <columnName> in:\n<tableSchema>" ],
    "sqlState" : "42000"
  },
  "DELTA_COLUMN_STRUCT_TYPE_MISMATCH" : {
    "message" : [ "Struct column <source> cannot be inserted into a <targetType> field <targetField> in <targetTable>." ],
    "sqlState" : "2200G"
  },
  "DELTA_COMPLEX_TYPE_COLUMN_CONTAINS_NULL_TYPE" : {
    "message" : [ " Found nested NullType in column <columName> which is of <dataType>. Delta doesn't support writing NullType in complex types." ],
    "sqlState" : "22005"
  },
  "DELTA_CONFLICT_SET_COLUMN" : {
    "message" : [ "There is a conflict from these SET columns: <columnList>." ],
    "sqlState" : "42000"
  },
  "DELTA_CONSTRAINT_ALREADY_EXISTS" : {
    "message" : [ "Constraint '<constraintName>' already exists as a CHECK constraint. Please delete the old constraint first.", "Old constraint:", "<checkCondition>" ],
    "sqlState" : "42000"
  },
  "DELTA_CONSTRAINT_DOES_NOT_EXIST" : {
    "message" : [ "Cannot drop nonexistent constraint <constraintName> from table <tableName>. To avoid throwing an error, provide the parameter IF EXISTS or set the SQL session configuration <config> to <confValue>." ],
    "sqlState" : "42000"
  },
  "DELTA_CONVERSION_UNSUPPORTED_COLUMN_MAPPING" : {
    "message" : [ "The configuration '<config>' cannot be set to `<mode>` when using CONVERT TO DELTA." ],
    "sqlState" : "0A000"
  },
  "DELTA_CREATE_EXTERNAL_TABLE_WITHOUT_SCHEMA" : {
    "message" : [ "", "You are trying to create an external table <tableName>", "from `<path>` using Delta, but the schema is not specified when the", "input path is empty.", "", "To learn more about Delta, see <docLink>" ],
    "sqlState" : "42000"
  },
  "DELTA_CREATE_EXTERNAL_TABLE_WITHOUT_TXN_LOG" : {
    "message" : [ "", "You are trying to create an external table <tableName>", "from `%2$s` using Delta, but there is no transaction log present at", "`%2$s/_delta_log`. Check the upstream job to make sure that it is writing using", "format(\"delta\") and that the path is the root of the table.", "", "To learn more about Delta, see <docLink>" ],
    "sqlState" : "42000"
  },
  "DELTA_CREATE_TABLE_SCHEME_MISMATCH" : {
    "message" : [ "The specified schema does not match the existing schema at <path>.", "", "== Specified ==", "<specifiedSchema>", "", "== Existing ==", "<existingSchema>", "", "== Differences ==", "<schemaDifferences>", "", "If your intention is to keep the existing schema, you can omit the", "schema from the create table command. Otherwise please ensure that", "the schema matches." ],
    "sqlState" : "42000"
  },
  "DELTA_DUPLICATE_COLUMNS_ON_UPDATE_TABLE" : {
    "message" : [ "<message>\nPlease remove duplicate columns before you update your table." ],
    "sqlState" : "42000"
  },
  "DELTA_EXCEED_CHAR_VARCHAR_LIMIT" : {
    "message" : [ "Exceeds char/varchar type length limitation" ],
    "sqlState" : "22026"
  },
  "DELTA_EXPRESSIONS_NOT_FOUND_IN_GENERATED_COLUMN" : {
    "message" : [ "Cannot find the expressions in the generated column <columnName>" ],
    "sqlState" : "42000"
  },
  "DELTA_EXTRACT_REFERENCES_FIELD_NOT_FOUND" : {
    "message" : [ "Field <fieldName> could not be found when extracting references." ],
    "sqlState" : "22000"
  },
  "DELTA_FAILED_CAST_PARTITION_VALUE" : {
    "message" : [ "Failed to cast partition value `<value>` to <dataType>" ],
    "sqlState" : "22000"
  },
  "DELTA_FAILED_INFER_SCHEMA" : {
    "message" : [ "Failed to infer schema from the given list of files." ],
    "sqlState" : "22000"
  },
  "DELTA_FAILED_MERGE_SCHEMA_FILE" : {
    "message" : [ "Failed to merge schema of file <file>:", "<schema>" ],
    "sqlState" : "42000"
  },
  "DELTA_FAILED_TO_MERGE_FIELDS" : {
    "message" : [ "Failed to merge fields '<field>' and '<fieldRoot>'. <fieldChild>" ],
    "sqlState" : "22005"
  },
  "DELTA_FILE_LIST_AND_PATTERN_STRING_CONFLICT" : {
    "message" : [ "Cannot specify both file list and pattern string." ]
  },
  "DELTA_FILE_NOT_FOUND" : {
    "message" : [ "File path <path>" ],
    "sqlState" : "22000"
  },
  "DELTA_FILE_OR_DIR_NOT_FOUND" : {
    "message" : [ "No such file or directory: <path>" ],
    "sqlState" : "22000"
  },
  "DELTA_FILE_TO_OVERWRITE_NOT_FOUND" : {
    "message" : [ "File (<path>) to be rewritten not found among candidate files:\n<pathList>" ],
    "sqlState" : "42000"
  },
  "DELTA_GENERATED_COLUMNS_DATA_TYPE_MISMATCH" : {
    "message" : [ "Column <columnName> is a generated column or a column used by a generated column. The data type is <columnType>. It doesn't accept data type <dataType>" ],
    "sqlState" : "2200G"
  },
  "DELTA_GENERATED_COLUMNS_EXPR_TYPE_MISMATCH" : {
    "message" : [ "The expression type of the generated column <columnName> is <expressionType>, but the column type is <columnType>" ],
    "sqlState" : "2200G"
  },
  "DELTA_ILLEGAL_FILE_FOUND" : {
    "message" : [ "Illegal files found in a dataChange = false transaction. Files: <file>" ]
  },
  "DELTA_ILLEGAL_USAGE" : {
    "message" : [ "The usage of <option> is not allowed when <operation> a Delta table." ],
    "sqlState" : "0A000"
  },
  "DELTA_INCORRECT_ARRAY_ACCESS" : {
    "message" : [ "Incorrectly accessing an ArrayType. Use arrayname.element.elementname position to", "add to an array." ],
    "sqlState" : "42000"
  },
  "DELTA_INCORRECT_LOG_STORE_IMPLEMENTATION" : {
    "message" : [ "The error typically occurs when the default LogStore implementation, that", "is, HDFSLogStore, is used to write into a Delta table on a non-HDFS storage system.", "In order to get the transactional ACID guarantees on table updates, you have to use the", "correct implementation of LogStore that is appropriate for your storage system.", "See <docLink> for details.", "" ],
    "sqlState" : "0A000"
  },
  "DELTA_INDEX_LARGER_OR_EQUAL_THAN_STRUCT" : {
    "message" : [ "Index <index> to drop column equals to or is larger than struct length: <length>" ],
    "sqlState" : "2F000"
  },
  "DELTA_INDEX_LARGER_THAN_STRUCT" : {
    "message" : [ "Index <index> to add column <columnName> is larger than struct length: <length>" ],
    "sqlState" : "2F000"
  },
  "DELTA_INSERT_COLUMN_ARITY_MISMATCH" : {
    "message" : [ "Cannot write to '<tableName>', <columnName>; target table has <numColumns> column(s) but the inserted data has <insertColumns> column(s)" ],
    "sqlState" : "22000"
  },
  "DELTA_INSERT_COLUMN_MISMATCH" : {
    "message" : [ "Column <columnName> is not specified in INSERT" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_CALENDAR_INTERVAL_EMPTY" : {
    "message" : [ "Interval cannot be null or blank." ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_CHARACTERS_IN_COLUMN_NAME" : {
    "message" : [ "Attribute name \"<columnName>\" contains invalid character(s) among \" ,;{}()\\\\n\\\\t=\". Please use alias to rename it." ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_CHARACTERS_IN_COLUMN_NAMES" : {
    "message" : [ "Found invalid character(s) among ' ,;{}()\\n\\t=' in the column names of your schema. <advice>" ],
    "sqlState" : "0A000"
  },
  "DELTA_INVALID_COMMITTED_VERSION" : {
    "message" : [ "The committed version is <committedVersion> but the current version is <currentVersion>." ],
    "sqlState" : "25000"
  },
  "DELTA_INVALID_GENERATED_COLUMN_REFERENCES" : {
    "message" : [ "A generated column cannot use a non-existent column or another generated column" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_IDEMPOTENT_WRITES_OPTIONS" : {
    "message" : [ "Invalid options for idempotent Dataframe writes: <reason>" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_ISOLATION_LEVEL" : {
    "message" : [ "invalid isolation level '<isolationLevel>'" ],
    "sqlState" : "25000"
  },
  "DELTA_INVALID_LOGSTORE_CONF" : {
    "message" : [ "(`spark.delta.logStore.class`) and (`<schemeConfig>`) cannot be set at the same time. Please set only one group of them." ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_MANAGED_TABLE_SYNTAX_NO_SCHEMA" : {
    "message" : [ "", "You are trying to create a managed table <tableName>", "using Delta, but the schema is not specified.", "", "To learn more about Delta, see <docLink>" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_PARTITIONING_SCHEMA" : {
    "message" : [ "", "The AddFile contains partitioning schema different from the table's partitioning schema", "expected: <neededPartitioning>", "actual: <specifiedPartitioning>", "To disable this check set <config> to \"false\"" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_PARTITION_COLUMN" : {
    "message" : [ "<columnName> is not a valid partition column in table <tableName>." ],
    "sqlState" : "22000"
  },
  "DELTA_INVALID_PARTITION_PATH" : {
    "message" : [ "A partition path fragment should be the form like `part1=foo/part2=bar`. The partition path: <path>" ],
    "sqlState" : "22000"
  },
  "DELTA_INVALID_PROTOCOL_DOWNGRADE" : {
    "message" : [ "Protocol version cannot be downgraded from <oldProtocol> to <newProtocol>" ],
    "sqlState" : "42000"
  },
  "DELTA_INVALID_SOURCE_VERSION" : {
    "message" : [ "sourceVersion(<version>) is invalid" ],
    "sqlState" : "22000"
  },
  "DELTA_INVALID_TIMESTAMP_FORMAT" : {
    "message" : [ "The provided timestamp <timestamp> does not match the expected syntax <format>." ],
    "sqlState" : "22000"
  },
  "DELTA_INVALID_V1_TABLE_CALL" : {
    "message" : [ "<callVersion> call is not expected with path based <tableVersion>" ],
    "sqlState" : "42000"
  },
  "DELTA_ITERATOR_ALREADY_CLOSED" : {
    "message" : [ "Iterator is closed" ],
    "sqlState" : "42000"
  },
  "DELTA_MAX_COMMIT_RETRIES_EXCEEDED" : {
    "message" : [ "This commit has failed as it has been tried <numAttempts> times but did not succeed.", "This can be caused by the Delta table being committed continuously by many concurrent", "commits.", "", "Commit started at version: <startVersion>", "Commit failed at version: <failVersion>", "Number of actions attempted to commit: <numActions>", "Total time spent attempting this commit: <timeSpent> ms" ],
    "sqlState" : "40000"
  },
  "DELTA_MERGE_INCOMPATIBLE_DECIMAL_TYPE" : {
    "message" : [ "Failed to merge decimal types with incompatible <decimalRanges>" ],
    "sqlState" : "22005"
  },
  "DELTA_MERGE_INVALID_WHEN_NOT_MATCHED_CLAUSE" : {
    "message" : [ "<clause> clauses cannot be part of the WHEN NOT MATCHED clause in MERGE INTO." ],
    "sqlState" : "42000"
  },
  "DELTA_MERGE_UNEXPECTED_ASSIGNMENT_KEY" : {
    "message" : [ "Unexpected assignment key: %s - %s" ],
    "sqlState" : "22005"
  },
  "DELTA_MISSING_CHANGE_DATA" : {
    "message" : [ "Error getting change data for range [<startVersion> , <endVersion>] as change data was not", "recorded for version [<version>]. If you've enabled change data feed on this table,", "use `DESCRIBE HISTORY` to see when it was first enabled.", "Otherwise, to start recording change data, use `ALTER TABLE table_name SET TBLPROPERTIES", "(<key>=true)`." ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_COLUMN" : {
    "message" : [ "Cannot find <columName> in table columns: <columnList>" ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_DELTA_TABLE" : {
    "message" : [ "<tableName> is not a Delta table." ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_FILES_UNEXPECTED_VERSION" : {
    "message" : [ "The stream from your Delta table was expecting process data from version <startVersion>,", "but the earliest available version in the _delta_log directory is <earliestVersion>. The files", "in the transaction log may have been deleted due to log cleanup. In order to avoid losing", "data, we recommend that you restart your stream with a new checkpoint location and to", "increase your delta.logRetentionDuration setting, if you have explicitly set it below 30", "days.", "If you would like to ignore the missed data and continue your stream from where it left", "off, you can set the .option(\"<option>\", \"false\") as part", "of your readStream statement." ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_NOT_NULL_COLUMN_VALUE" : {
    "message" : [ "Column <columnName>, which has a NOT NULL constraint, is missing from the data being written into the table." ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_PARTITION_COLUMN" : {
    "message" : [ "Partition column `<columnName>` not found in schema <columnList>" ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_PROVIDER_FOR_CONVERT" : {
    "message" : [ "CONVERT TO DELTA only supports parquet tables. Please rewrite your target as parquet.`<path>` if it's a parquet directory." ],
    "sqlState" : "42000"
  },
  "DELTA_MISSING_SET_COLUMN" : {
    "message" : [ "SET column <columnName> not found given columns: <columnList>." ],
    "sqlState" : "42000"
  },
  "DELTA_MODE_NOT_SUPPORTED" : {
    "message" : [ "Specified mode '<mode>' is not supported. Supported modes are: <supportedModes>" ],
    "sqlState" : "0A000"
  },
  "DELTA_MULTIPLE_CDC_BOUNDARY" : {
    "message" : [ "Multiple <startingOrEnding> arguments provided for CDC read. Please provide one of either <startingOrEnding>Timestamp or <startingOrEnding>Version." ],
    "sqlState" : "42000"
  },
  "DELTA_MULTIPLE_CONF_FOR_SINGLE_COLUMN_IN_BLOOM_FILTER" : {
    "message" : [ "Multiple bloom filter index configurations passed to command for column: <columnName>" ],
    "sqlState" : "0A000"
  },
  "DELTA_NEW_CHECK_CONSTRAINT_VIOLATION" : {
    "message" : [ "<numRows> rows in <tableName> violate the new CHECK constraint (<checkConstraint>)" ],
    "sqlState" : "42000"
  },
  "DELTA_NON_DETERMINISTIC_FUNCTION_NOT_SUPPORTED" : {
    "message" : [ "Non-deterministic functions are not supported in the <operation> <expression>" ],
    "sqlState" : "0A000"
  },
  "DELTA_NON_GENERATED_COLUMN_MISSING_UPDATE_EXPR" : {
    "message" : [ "<columnName> is not a generated column but is missing its update expression" ],
    "sqlState" : "42000"
  },
  "DELTA_NON_LAST_NOT_MATCHED_CLAUSE_OMIT_CONDITION" : {
    "message" : [ "When there are more than one NOT MATCHED clauses in a MERGE statement, only the last NOT MATCHED clause can omit the condition" ],
    "sqlState" : "42000"
  },
  "DELTA_NON_PARSABLE_TAG" : {
    "message" : [ "Could not parse tag <tag>.", "File tags are: <tagList>" ],
    "sqlState" : "42000"
  },
  "DELTA_NON_PARTITION_COLUMN_ABSENT" : {
    "message" : [ "Data written into Delta needs to contain at least one non-partitioned column.<details>" ],
    "sqlState" : "42000"
  },
  "DELTA_NON_PARTITION_COLUMN_REFERENCE" : {
    "message" : [ "Predicate references non-partition column '<columnName>'. Only the partition columns may be referenced: [<columnList>]" ],
    "sqlState" : "2F000"
  },
  "DELTA_NOT_A_DELTA_TABLE" : {
    "message" : [ "<tableName> is not a Delta table. Please drop this table first if you would like to recreate it with Delta Lake." ],
    "sqlState" : "42000"
  },
  "DELTA_NOT_NULL_COLUMN_NOT_FOUND_IN_STRUCT" : {
    "message" : [ "Not nullable column not found in struct: <struct>" ],
    "sqlState" : "42000"
  },
  "DELTA_NOT_NULL_CONSTRAINT_VIOLATED" : {
    "message" : [ "NOT NULL constraint violated for column: <columnName>.", "" ],
    "sqlState" : "22004"
  },
  "DELTA_NO_COMMITS_FOUND" : {
    "message" : [ "No commits found at <logPath>" ],
    "sqlState" : "42000"
  },
  "DELTA_NO_NEW_ATTRIBUTE_ID" : {
    "message" : [ "Could not find a new attribute ID for column <columnName>. This should have been checked earlier." ],
    "sqlState" : "22000"
  },
  "DELTA_ONEOF_IN_TIMETRAVEL" : {
    "message" : [ "Please either provide 'timestampAsOf' or 'versionAsOf' for time travel." ],
    "sqlState" : "42000"
  },
  "DELTA_OPERATION_NOT_ALLOWED" : {
    "message" : [ "Operation not allowed: `<operation>` is not supported for Delta tables: <tableName>" ],
    "sqlState" : "42000"
  },
  "DELTA_OPERATION_ON_TEMP_VIEW_WITH_GENERATED_COLS_NOT_SUPPORTED" : {
    "message" : [ "<operation> command on a temp view referring to a Delta table that contains generated columns is not supported. Please run the <operation> command on the Delta table directly" ],
    "sqlState" : "42000"
  },
  "DELTA_PARTITION_COLUMN_CAST_FAILED" : {
    "message" : [ "Failed to cast value `<value>` to `<dataType>` for partition column `<columnName>`" ],
    "sqlState" : "22000"
  },
  "DELTA_PATH_DOES_NOT_EXIST" : {
    "message" : [ "<path> doesn't exist" ],
    "sqlState" : "22000"
  },
  "DELTA_POST_COMMIT_HOOK_FAILED" : {
    "message" : [ "Committing to the Delta table version <version> succeeded but error while executing post-commit hook <name><message>" ],
    "sqlState" : "2D000"
  },
  "DELTA_PROTOCOL_PROPERTY_NOT_INT" : {
    "message" : [ "Protocol property <key> needs to be an integer. Found <value>" ],
    "sqlState" : "22000"
  },
  "DELTA_READ_TABLE_WITHOUT_COLUMNS" : {
    "message" : [ "You are trying to read a table <tableName> without columns using Delta.", "", "Write some data with option `mergeSchema = true` to enable subsequent read access." ],
    "sqlState" : "42000"
  },
  "DELTA_REGEX_OPT_SYNTAX_ERROR" : {
    "message" : [ "Please recheck your syntax for '<regExpOption>'" ],
    "sqlState" : "42000"
  },
  "DELTA_REPLACE_WHERE_MISMATCH" : {
    "message" : [ "Data written out does not match replaceWhere '<replaceWhere>'.", "<message>" ],
    "sqlState" : "22000"
  },
  "DELTA_SPARK_SESSION_NOT_SET" : {
    "message" : [ "Active SparkSession not set." ]
  },
  "DELTA_STATE_RECOVER_ERROR" : {
    "message" : [ "The <operation> of your Delta table could not be recovered while Reconstructing", "version: <version>. Did you manually delete files in the _delta_log directory?", "Set <config> to \"false\"", "to skip validation." ],
    "sqlState" : "22000"
  },
  "DELTA_TABLE_ALREADY_CONTAINS_CDC_COLUMNS" : {
    "message" : [ "Unable to enable Change Data Capture on the table. The table already contains", "reserved columns <columnList> that will", "be used internally as metadata for the table's Change Data Feed. To enable", "Change Data Feed on the table rename/drop these columns.", "" ],
    "sqlState" : "42000"
  },
  "DELTA_TABLE_ALREADY_EXISTS" : {
    "message" : [ "Table <tableName> already exists." ],
    "sqlState" : "42000"
  },
  "DELTA_TABLE_NOT_FOUND" : {
    "message" : [ "Delta table <tableName> doesn't exist. Please delete your streaming query checkpoint and restart." ],
    "sqlState" : "42000"
  },
  "DELTA_TABLE_NOT_SUPPORTED_IN_OP" : {
    "message" : [ "Table is not supported in <operation>. Please use a path instead." ],
    "sqlState" : "0A000"
  },
  "DELTA_TABLE_ONLY_OPERATION" : {
    "message" : [ "<tableName> is not a Delta table. <operation> is only supported for Delta tables." ],
    "sqlState" : "0A000"
  },
  "DELTA_TIMESTAMP_GREATER_THAN_COMMIT" : {
    "message" : [ "The provided timestamp (<providedTimestamp>) is after the latest version available to this", "table (<tableName>). Please use a timestamp before or at <maximumTimestamp>." ],
    "sqlState" : "42000"
  },
  "DELTA_UNEXPECTED_ATTRIBUTE_REFERENCE" : {
    "message" : [ "Expected AttributeReference but got <ref>" ],
    "sqlState" : "42000"
  },
  "DELTA_UNEXPECTED_PARTIAL_SCAN" : {
    "message" : [ "Expect a full scan of Delta sources, but found a partial scan. path:<path>" ],
    "sqlState" : "22000"
  },
  "DELTA_UNKNOWN_CONFIGURATION" : {
    "message" : [ "Unknown configuration was specified: <config>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNRECOGNIZED_INVARIANT" : {
    "message" : [ "Unrecognized invariant. Please upgrade your Spark version." ],
    "sqlState" : "42000"
  },
  "DELTA_UNRECOGNIZED_LOGFILE" : {
    "message" : [ "Unrecognized log file <filename>" ],
    "sqlState" : "42000"
  },
  "DELTA_UNSET_NON_EXISTENT_PROPERTY" : {
    "message" : [ "Attempted to unset non-existent property '<property>' in table <tableName>" ],
    "sqlState" : "42000"
  },
  "DELTA_UNSUPPORTED_ABS_PATH_ADD_FILE" : {
    "message" : [ "<path> does not support adding files with an absolute path" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_ALTER_TABLE_REPLACE_COL_OP" : {
    "message" : [ "Unsupported ALTER TABLE REPLACE COLUMNS operation. Reason: <details>", "", "Failed to change schema from:", "<oldSchema>", "to:", "<newSchema>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_COLUMN_MAPPING_MODE_CHANGE" : {
    "message" : [ "Changing column mapping mode from '<oldMode>' to '<newMode>' is not supported." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_COLUMN_MAPPING_PROTOCOL" : {
    "message" : [ "", "Your current table protocol version does not support changing column mapping modes", "using <config>.", "", "Required Delta protocol version for column mapping:", "<requiredVersion>", "Your table's current Delta protocol version:", "<currentVersion>", "", "Please upgrade your table's protocol version using ALTER TABLE SET TBLPROPERTIES and try again.", "", "" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_COLUMN_MAPPING_SCHEMA_CHANGE" : {
    "message" : [ "", "Schema change is detected:", "", "old schema:", "<oldTableSchema>", "", "new schema:", "<newTableSchema>", "", "Schema changes are not allowed during the change of column mapping mode.", "", "" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_COLUMN_MAPPING_WRITE" : {
    "message" : [ "Writing data with column mapping mode is not supported." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_COLUMN_TYPE_IN_BLOOM_FILTER" : {
    "message" : [ "Creating a bloom filter index on a column with type <dataType> is unsupported: <columnName>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_DATA_TYPES" : {
    "message" : [ "Found columns using unsupported data types: <dataTypeList>. You can set '<config>' to 'false' to disable the type check. Disabling this type check may allow users to create unsupported Delta tables and should only be used when trying to read/write legacy tables." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_DROP_COLUMN" : {
    "message" : [ "DROP COLUMN is not supported for your Delta table. <advice>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_DROP_PARTITION_COLUMN" : {
    "message" : [ "Dropping partition columns (<columnList>) is not allowed." ]
  },
  "DELTA_UNSUPPORTED_EXPRESSION_GENERATED_COLUMN" : {
    "message" : [ "<expression> cannot be used in a generated column" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_FIELD_UPDATE_NON_STRUCT" : {
    "message" : [ "Updating nested fields is only supported for StructType, but you are trying to update a field of <columnName>, which is of type: <dataType>." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_INVARIANT_NON_STRUCT" : {
    "message" : [ "Invariants on nested fields other than StructTypes are not supported." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_MANIFEST_GENERATION_WITH_COLUMN_MAPPING" : {
    "message" : [ "Manifest generation is not supported for tables that leverage column mapping, as external readers cannot read these Delta tables. See Delta documentation for more details." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_NESTED_COLUMN_IN_BLOOM_FILTER" : {
    "message" : [ "Creating a bloom filer index on a nested column is currently unsupported: <columnName>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_NESTED_FIELD_IN_OPERATION" : {
    "message" : [ "Nested field is not supported in the <operation> (field = <fieldName>)." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_OUTPUT_MODE" : {
    "message" : [ "Data source <dataSource> does not support <mode> output mode" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_PARTITION_COLUMN_IN_BLOOM_FILTER" : {
    "message" : [ "Creating a bloom filter index on a partitioning column is unsupported: <columnName>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_RENAME_COLUMN" : {
    "message" : [ "Column rename is not supported for your Delta table. <advice>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_SOURCE" : {
    "message" : [ "<operation> destination only supports Delta sources.\n<plan>" ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_TIME_TRAVEL_MULTIPLE_FORMATS" : {
    "message" : [ "Cannot specify time travel in multiple formats." ],
    "sqlState" : "0A000"
  },
  "DELTA_UNSUPPORTED_TIME_TRAVEL_VIEWS" : {
    "message" : [ "Cannot time travel views, subqueries or streams." ],
    "sqlState" : "0A000"
  },
  "DELTA_VERSIONS_NOT_CONTIGUOUS" : {
    "message" : [ "Versions (<versionList>) are not contiguous." ],
    "sqlState" : "0A000"
  },
  "DELTA_VIOLATE_CONSTRAINT_WITH_VALUES" : {
    "message" : [ "CHECK constraint <constraintName> <expression> violated by row with values:", "<values>" ],
    "sqlState" : "23001"
  },
  "RESERVED_CDC_COLUMNS_ON_WRITE" : {
    "message" : [ "", "The write contains reserved columns <columnList> that are used", "internally as metadata for Change Data Feed. To write to the table either rename/drop", "these columns or disable Change Data Feed on the table by setting", "<config> to false." ],
    "sqlState" : "42000"
  }
}
