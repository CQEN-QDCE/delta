version: 2.1

workflows:
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/ # runs only for tags starting with 'v'
            branches:
              ignore: /.*/ # doesn't run for branches

jobs:
  test:
    docker:
      - image: circleci/openjdk:8u181-jdk # java 8
    steps:
      - checkout
      - run:
          name: Prepare Python env # install python3.7, python3-pip and pipenv for pyspark.
          # TODO: Dockerize this process
          command: |
            sudo apt-get update
            sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git
            sudo apt install libedit-dev
            sudo apt install python3-pip --fix-missing
            sudo pip3 install pipenv
            curl https://pyenv.run | bash
            export PATH="/home/circleci/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            pyenv install 3.7.4
            pyenv global system 3.7.4
            pipenv --python 3.7 install
            pipenv run pip install pyspark==3.1.1
            pipenv run pip install flake8==3.5.0 pypandoc==1.3.3
      - run:
          name: Run Scala/Java and Python tests
          command: |
            pipenv run python run-tests.py

  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = <username>" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            pip install twine
            twine upload dist/*
